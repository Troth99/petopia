import { signInWithEmailAndPassword } from "@firebase/auth"
import { render, html, page, mainEl } from "../constants/constants.js"
import { auth } from "../config/firebaseInit.js"


export default function loginView() {

  render(loginTemplate(), mainEl)
}


function loginTemplate() {
  return html`

  <div class="login-container">
    <h2>–í–ª–µ–∑ –≤ —Å–≤–µ—Ç—ä—Ç –Ω–∞ –¥–æ–º–∞—à–Ω–∏—Ç–µ –ª—é–±–∏–º—Ü–∏!</h2>
    <form action="#" method="POST" class="login-form" @submit=${loginSubmitHandler}>
      <div class="input-group">
        <label for="email">Email</label>
        <input type="text" id="email" name="email" placeholder="Enter your email" required>
      </div>
      <div class="input-group">
        <label for="password">–ü–∞—Ä–æ–ª–∞</label>
        <input type="password" id="password" name="password" placeholder="Enter your password" required>
      </div>
      <p id="error-message" style="color: red; display: none;"></p>
      <button type="submit" class="submit-btn">–í–ª–µ–∑ üêæ</button>
      <p class="signup-link">–ù—è–º–∞—à –ø—Ä–æ—Ñ–∏–ª? <a href="/register">–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</a></p>
    </form>
  </div>
    `
}

async function loginSubmitHandler(e) {
  e.preventDefault()
  const formData = new FormData(e.currentTarget)

  const { email, password } = Object.fromEntries(formData);

  console.log({ email, password })


  try {
    const userCredentials = await signInWithEmailAndPassword(auth, email, password)
    const user = userCredentials.user;
    localStorage.setItem('firebase.user', JSON.stringify(user));
    page.redirect('/')
  } catch (error) {
    console.error("–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –≤—Ö–æ–¥:", error.message);

    // –£–≤–µ—Ä–∏ —Å–µ, —á–µ errorMessage –µ –Ω–∞–ª–∏—á–µ–Ω
    const errorMessage = document.getElementById("error-message");

    if (errorMessage) {
      // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∏ –≥—Ä–µ—à–∫–∏ –æ—Ç Firebase
      if (error.code === 'auth/user-not-found') {
        console.error("–ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è—Ç –Ω–µ –µ –Ω–∞–º–µ—Ä–µ–Ω.");
        errorMessage.innerText = '–ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è—Ç –Ω–µ –µ –Ω–∞–º–µ—Ä–µ–Ω. –ú–æ–ª—è, –ø—Ä–æ–≤–µ—Ä–µ—Ç–µ –∏–º–µ–π–ª–∞ —Å–∏.';
      } else if (error.code === 'auth/wrong-password') {
        console.error("–ì—Ä–µ—à–Ω–∞ –ø–∞—Ä–æ–ª–∞.");
        errorMessage.innerText = '–ì—Ä–µ—à–Ω–∞ –ø–∞—Ä–æ–ª–∞. –û–ø–∏—Ç–∞–π—Ç–µ –æ—Ç–Ω–æ–≤–æ.';
      } else if (error.code === 'auth/invalid-email') {
        console.error("–ù–µ–≤–∞–ª–∏–¥–µ–Ω –∏–º–µ–π–ª.");
        errorMessage.innerText = '–ù–µ–≤–∞–ª–∏–¥–µ–Ω –∏–º–µ–π–ª. –ú–æ–ª—è, –≤—ä–≤–µ–¥–µ—Ç–µ –≤–∞–ª–∏–¥–µ–Ω –∏–º–µ–π–ª –∞–¥—Ä–µ—Å.';
      } else {
        // –î—Ä—É–≥–∏ –≥—Ä–µ—à–∫–∏
        console.error("–ù–µ–æ—á–∞–∫–≤–∞–Ω–∞ –≥—Ä–µ—à–∫–∞:", error.message);
        errorMessage.innerText = '–ù–µ–æ—á–∞–∫–≤–∞–Ω–∞ –≥—Ä–µ—à–∫–∞. –ú–æ–ª—è, –æ–ø–∏—Ç–∞–π—Ç–µ –æ—Ç–Ω–æ–≤–æ.';
      }
      errorMessage.style.display = 'block';  // –ü–æ–∫–∞–∂–∏ —Å—ä–æ–±—â–µ–Ω–∏–µ—Ç–æ –∑–∞ –≥—Ä–µ—à–∫–∞
    } else {
      console.error("–ï–ª–µ–º–µ–Ω—Ç—ä—Ç –∑–∞ –≥—Ä–µ—à–∫–∞ –Ω–µ –±–µ—à–µ –Ω–∞–º–µ—Ä–µ–Ω.");
    }
  }

}