import { createUserWithEmailAndPassword } from "firebase/auth";
import { mainEl, render, html, page } from "../constants/constants.js"
import { auth } from "../config/firebaseInit.js"

export async function registerHandler(e) {
    e.preventDefault()
    console.log("–°—ä–±–∏—Ç–∏–µ—Ç–æ –µ —Å–ø—Ä—è–Ωo");
    const reigsterForm = new FormData(e.currentTarget)
    const entries = Object.fromEntries(reigsterForm)

    const username = entries.username
    const email = entries.email;
    const password = entries.password
    const confirmPassword = entries["confirm-password"]

    console.log({ username, email, password, confirmPassword })

    if (password !== confirmPassword) {
        showError('–ü–∞—Ä–æ–ª–∏—Ç–µ –Ω–µ —Å—ä–≤–ø–∞–¥–∞—Ç!')
        return;
    }

    function showError(message) {
        setTimeout(() => {
            const errorMessage = document.getElementById("error-message");
            if (errorMessage) {
                errorMessage.innerText = message;
                errorMessage.style.display = "block";
            } else {
                console.error("–ù–µ –º–æ–≥–∞ –¥–∞ –Ω–∞–º–µ—Ä—è #error-message!");
            }
        }, 0);
    }

    const registerUser = async (email, password) => {
        try {
            const userCredential = await createUserWithEmailAndPassword(auth, email, password);
            const user = userCredential.user;

            console.log("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!", user);
            localStorage.setItem('firebase.user', JSON.stringify(user));
            page.redirect('/');

        } catch (error) {
            console.error("–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è:", error.message);

            let errorText = error.message.replace(/^Firebase: /, '').split('(')[0].trim();

            if (error.code === "auth/email-already-in-use") {
                errorText = "–ò–º–µ–π–ª—ä—Ç –≤–µ—á–µ –µ –∏–∑–ø–æ–ª–∑–≤–∞–Ω. –ú–æ–ª—è, –∏–∑–ø–æ–ª–∑–≤–∞–π—Ç–µ –¥—Ä—É–≥.";
            } else if (error.code === "auth/weak-password") {
                errorText = "–ü–∞—Ä–æ–ª–∞—Ç–∞ —Ç—Ä—è–±–≤–∞ –¥–∞ –µ –ø–æ–Ω–µ 6 —Å–∏–º–≤–æ–ª–∞ –¥—ä–ª–≥–∞.";
            } else if (error.code === "auth/invalid-email") {
                errorText = "–ò–º–µ–π–ª—ä—Ç –µ –≤ –Ω–µ–≤–∞–ª–∏–¥–µ–Ω —Ñ–æ—Ä–º–∞—Ç.";
            } else {
                errorText = "–í—ä–∑–Ω–∏–∫–Ω–∞ –≥—Ä–µ—à–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è. –ú–æ–ª—è, –æ–ø–∏—Ç–∞–π—Ç–µ –æ—Ç–Ω–æ–≤–æ.";
            }

            // üî• –í–∑–µ–º–∏ –µ–ª–µ–º–µ–Ω—Ç–∞ –ø—Ä–µ–¥–∏ –¥–∞ –≥–æ –∏–∑–ø–æ–ª–∑–≤–∞—à!
            const errorMessage = document.getElementById("error-message");
            if (errorMessage) {
                errorMessage.innerText = errorText;
                errorMessage.style.display = "block";
            } else {
                console.error("‚ùå –ù–µ –º–æ–≥–∞ –¥–∞ –Ω–∞–º–µ—Ä—è #error-message –≤ DOM-–∞!");
            }
        }
    }
    registerUser(email, password);
}